package com.rwn.rwnstudy.activities;import android.content.Intent;import androidx.annotation.NonNull;import com.google.android.material.tabs.TabLayout;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.firebase.ui.database.FirebaseRecyclerAdapter;import com.firebase.ui.database.FirebaseRecyclerOptions;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.Query;import com.google.firebase.database.ValueEventListener;import com.rwn.rwnstudy.R;import com.squareup.picasso.Picasso;import de.hdodenhof.circleimageview.CircleImageView;public class SelfStatusViewer extends AppCompatActivity {    RecyclerView recyclerView;    DatabaseReference databaseReference;    TabLayout tabLayout;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_self_status_viewer);        tabLayout = (TabLayout) findViewById(R.id.tabLayout_MainTab);        tabLayout.addTab(tabLayout.newTab().setText("Status Viewed by "));        tabLayout.setTabGravity(0);        tabLayout.setSelectedTabIndicatorColor(getResources().getColor(R.color.colorPrimary));        recyclerView= findViewById(R.id.recyclerView_statusViewer);        recyclerView.setHasFixedSize(true);        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(SelfStatusViewer.this);        linearLayoutManager.setReverseLayout(true);        linearLayoutManager.setStackFromEnd(true);        recyclerView.setLayoutManager(linearLayoutManager);        databaseReference= FirebaseDatabase.getInstance().getReference();        Intent intent= getIntent();        String key= intent.getStringExtra("Key");        loadOnRecyclerViewer(key);    }    private void loadOnRecyclerViewer(final String key) {        Query query = databaseReference.child("StatusViewer").child(key);        FirebaseRecyclerOptions<String> options =                new FirebaseRecyclerOptions.Builder <String>()                        .setQuery(query, String.class)                        .build();        FirebaseRecyclerAdapter<String, ViewerViewHolder> firebaseRecyclerAdapter =                new FirebaseRecyclerAdapter <String, ViewerViewHolder>(options) {                    @Override                    protected void onBindViewHolder(@NonNull final ViewerViewHolder holder, int position, @NonNull String model) {                        final String Uid = getRef(position).getKey();                        databaseReference.child("StatusViewer").child(key).child(Uid).addListenerForSingleValueEvent(new ValueEventListener() {                            @Override                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                                if(dataSnapshot.exists()){                                    String time= dataSnapshot.getValue().toString();                                    holder.Date.setText(time);                                }                            }                            @Override                            public void onCancelled(@NonNull DatabaseError databaseError) {                            }                        });                        databaseReference.child("Users").child(Uid).addListenerForSingleValueEvent(new ValueEventListener() {                            @Override                            public void onDataChange(DataSnapshot dataSnapshot) {                                if (dataSnapshot.exists()) {                                    if (dataSnapshot.hasChild("profileImage")) {                                        String profile = dataSnapshot.child("profileImage").getValue().toString();                                        Picasso.get().load(profile).into(holder.ProfileImage);                                    }                                    String name = dataSnapshot.child("name").getValue().toString();                                    holder.Fullname.setText(name);                                }                            }                            @Override                            public void onCancelled(DatabaseError databaseError) {                            }                        });                    }                    @NonNull                    @Override                    public ViewerViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {                        View view = LayoutInflater.from(parent.getContext())                                .inflate(R.layout.all_user_display_from_search, parent, false);                        ViewerViewHolder friendRequestViewHolder = new ViewerViewHolder(view);                        return friendRequestViewHolder;                    }                };        recyclerView.setAdapter(firebaseRecyclerAdapter);        firebaseRecyclerAdapter.startListening();    }    public static class ViewerViewHolder extends RecyclerView.ViewHolder {        TextView Fullname, Date;        CircleImageView ProfileImage;        ViewerViewHolder(View itemView) {            super(itemView);            Fullname = itemView.findViewById(R.id.textView_search_alluserProfile_Fullname);            ProfileImage = itemView.findViewById(R.id.circularView_search_profile);            Date = itemView.findViewById(R.id.textView_search_alluserProfile_status);        }    }}